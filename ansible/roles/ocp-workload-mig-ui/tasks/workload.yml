---
- name: Finding route URL 
  k8s_facts:
    api_version: "route.openshift.io/v1"
    kind: "Route"
    namespace: "{{ mig_ui_namespace }}"
    name: "{{ mig_ui_name }}"
  register: route_url_old
  when: destroy

- name: "{{ title }} route"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', item) | from_yaml }}"
  loop:
    - "route.yaml.j2"

- name: Generate random secret value for oauth client
  set_fact:
    mig_ui_oauth_secret: "{{ 99999999 | random | to_uuid | b64encode }}"

- name: Include variables from migmeta.yml
  include_vars: migmeta.yaml
  delegate_to: localhost

- name: Create host cluster if its missing
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', 'host.migcluster.yaml.j2') | from_yaml }}"

- name: Ensure no existing OAuthClients are present
  k8s:
    state: "absent"
    api_version: "oauth.openshift.io/v1"
    kind: OAuthClient
    name: "{{ mig_ui_oauth_client_id }}"

- name: Finding route URL 
  k8s_facts:
    api_version: "route.openshift.io/v1"
    kind: "Route"
    namespace: "{{ mig_ui_namespace }}"
    name: "{{ mig_ui_name }}"
  register: route_url_new
  when: not destroy

- name: Setting route URL
  set_fact: 
    mig_ui_route_cors_url: "{{ route_url_old.resources[0].spec.host }}"
  when: destroy

- name: Setting route URL
  set_fact: 
    mig_ui_route_cors_url: "{{ route_url_new.resources[0].spec.host }}"
  when: not destroy

- name: Output resolved mig-ui route
  debug:
    msg: "https://{{ mig_ui_route_cors_url }}"

- name: Set mig_ui_oauth_redirect_url
  set_fact:
    mig_ui_oauth_redirect_url: "https://{{ mig_ui_route_cors_url }}/login/callback"

- name: "Set mig-ui object state={{ state }}"
  k8s:
    state: "{{ state }}"
    definition: "{{ lookup('template', item) | from_yaml }}"
  loop:
    - oauthclient.yaml.j2
    - configmap.yaml.j2
    - service.yaml.j2
    - deploymentconfig.yaml.j2